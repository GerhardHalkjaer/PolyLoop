@page "/Specifik"
@using Services
@using Entities
@inject Service myServ
@inject IBIZ Biz
@rendermode InteractiveServer

@* TODO add css *@
<div class="SpecMatType">
    <img src="/img/@Biz.packagedUnit.SpecificType.MatType.IconPath" />@Biz.packagedUnit.SpecificType.MatType.Name
</div>



<div class="container mt-4">
    <div class="row">
        <div class="flex-wrap d-flex">
            @if (specificTypes != null && specificTypes.Any())
            {                
                @foreach (SpecificType item in specificTypes)
                {
                    <div class="card" style="width: 18rem;" @onclick="() => HandleClick(item.Id)">
                        
                            <img class="card-img-top" src="/img/@item.IconPath" alt="Card image cap" onerror="this.onerror=null;this.src='/img/PH.png';" />
                            <div class="card-overlay">@item.Name</div>
                    </div>
                }
            }
        </div>
    </div>
</div>



@code {
    private List<SpecificType> specificTypes;

    [Inject] NavigationManager Nav { get; set; } // Inject navigation service

    /// <summary>
    /// Initializes the component and retrieves all specific material types from the service.
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        if (Biz.packagedUnit.SpecificType.MatType.Id == -1)
        {
            Nav.NavigateTo("/");  // Navigate programmatically
        }

        specificTypes = await myServ.GetAllSpecificTypesAsync();
        if (specificTypes != null)
        {
            specificTypes = specificTypes.FindAll(x => x.MatType.Id == Biz.packagedUnit.SpecificType.MatType.Id);
        }
    }

    /// <summary>
    /// Sets the property of the PackagedUnit object to the selected specific type.
    /// </summary>
    /// <param name="Inid">The ID of the selected specific type</param>
    /// <exception cref="InvalidOperationException"></exception>
    private void SetProperty(int Inid)
    {
        var spec = specificTypes.FirstOrDefault(x => x.Id == Inid);
        if (spec != null)
        {
            Biz.packagedUnit.SpecificType = spec;
        }
        else
        {
            throw new InvalidOperationException($"SpecificType with Id {Inid} was not found.");
        }
    }

    /// <summary>
    /// handle click event for selected specific type
    /// </summary>
    /// <param name="id">The ID of the selected Plastic specific type</param>
    private void HandleClick(int id)
    {
        SetProperty(id);  // Set the property first
        Nav.NavigateTo("/Emballage");  // Navigate programmatically
    }

}
